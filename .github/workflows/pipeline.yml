name: ServiceNow GitHub Actions Demo

on:
  pull_request:
  push:
    branches:
      - master

jobs:
  build:
    # Purpose of this job is to Apply Remote Changes for the branch triggering 
    # the pipeline build to the Dev instance, then publish the application to 
    # app repo using the template versioning format. 
    name: Publish from Dev
    runs-on: ubuntu-latest
    # Below line can be used to set conditionals for modifying your pipeline as needed.
    # if: ${{ github.event_name == 'pull_request'}}

    steps:

      - name: ServiceNow CI/CD Apply Changes
        uses: ServiceNow/sncicd-apply-changes@2.0.0
        env:
          nowUsername: ${{ secrets.SN_USERNAME }}
          nowPassword: ${{ secrets.SN_PASSWORD }}
          nowSourceInstance: ${{ secrets.SN_DEV_INSTANCE }}
          appSysID: ${{ secrets.SN_APP_SYSID }}

      - name: ServiceNow CI/CD Publish App
        id: publish_app
        uses: ServiceNow/sncicd-publish-app@2.0.1
        with:
          versionTemplate: 1.1
          versionFormat: template
          # Optional, add +X to version number. Default: 1 
          # incrementBy: X
        env:
          nowUsername: ${{ secrets.SN_USERNAME }}
          nowPassword: ${{ secrets.SN_PASSWORD }}
          nowSourceInstance: ${{ secrets.SN_DEV_INSTANCE }}
          appSysID: ${{ secrets.SN_APP_SYSID }}
          
    # This is required to pass the version number output from Publish App 
    # to the input for Install App in the next job! This is because the jobs 
    # run on different Linux instances, so without this Install App won't know
    # what to install.
    outputs:
      publishversion: ${{ steps.publish_app.outputs.newVersion }}

  test:
    # Purpose of this job is to Install App from the app repo for the version 
    # published in the build job to a Test instance, then run an ATF Test Suite 
    # associated with the app. If Test Suite fails, the app should be Rolled Back 
    # to clean up the persistent Test environment. 
    needs: build
    name: Run ATF in Test
    runs-on: ubuntu-latest
    # Below line can be used to set conditionals for modifying your pipeline as needed.
    # if: ${{ github.event_name == 'pull_request'}}
    
    steps:

      - name: ServiceNow CI/CD Install App
        id: install_app
        uses: ServiceNow/sncicd-install-app@2.0.0
        with:
          version: ${{ needs.build.outputs.publishversion }}
          # Only applicable if Application Customization is active. 
          # Version of the base application on which to apply the customizations
#          baseAppVersion: '1.2.3'
          # Only applicable if Application Customization is active and the associated 
          # application is a higher version than the currently installed version
          # Default: false
          autoUpgradeBaseApp: false
        env:
          nowUsername: ${{ secrets.SN_USERNAME }}
          nowPassword: ${{ secrets.SN_PASSWORD }}
          nowInstallInstance: ${{ secrets.SN_TEST_INSTANCE }}
          appSysID: ${{ secrets.SN_APP_SYSID }}

      - name: ServiceNow CI/CD Run ATF Test Suite
        uses: ServiceNow/sncicd-tests-run@2.0.0
        with:
          testSuiteSysId: ${{ secrets.SN_ATFTESTSUITE_SYSID }}
        env:
          nowUsername: ${{ secrets.SN_USERNAME }}
          nowPassword: ${{ secrets.SN_PASSWORD }}
          nowInstallInstance: ${{ secrets.SN_TEST_INSTANCE }}

      - name: ServiceNow CI/CD Rollback App
        if: ${{ failure() && steps.install_app.outputs.rollbackVersion }}
        uses: ServiceNow/sncicd-rollback-app@2.0.0
        with:
          version: ${{steps.install_app.outputs.rollbackVersion}}
        env:
          nowUsername: ${{ secrets.SN_USERNAME }}
          nowPassword: ${{ secrets.SN_PASSWORD }}
          nowInstallInstance: ${{ secrets.SN_TEST_INSTANCE }}
          appSysID: ${{ secrets.SN_APP_SYSID }}

    # This is required to pass the version number output from Publish App 
    # to the input for Install App in the next job! This is because the jobs 
    # run on different Linux instances, so without this Install App won't know
    # what to install.
    outputs:
      publishversion: ${{ needs.build.outputs.publishversion }}

  deployprod:
    # Purpose of this job is to Install App to a Prod instance. This should only 
    # trigger if the feature branch has been merged to master after a successfully 
    # completed pull request, hence the conditional for push to master. In other words,
    # the first two jobs run on CI, then all three jobs run on CD. 
    needs: test
    name: Deploy to Prod
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/master' }}
    steps:
    
      - name: ServiceNow CI/CD Install App
        id: install_app_prod
        uses: ServiceNow/sncicd-install-app@2.0.0
        with:
          version: ${{ needs.test.outputs.publishversion }}
          # Only applicable if Application Customization is active. 
          # Version of the base application on which to apply the customizations
#          baseAppVersion: '1.2.3'
          # Only applicable if Application Customization is active and the associated 
          # application is a higher version than the currently installed version
          # Default: false
#          autoUpgradeBaseApp: true
        env:
          nowUsername: ${{ secrets.SN_USERNAME }}
          nowPassword: ${{ secrets.SN_PASSWORD }}
          nowInstallInstance: ${{ secrets.SN_PROD_INSTANCE }}
          appSysID: ${{ secrets.SN_APP_SYSID }}

  ServiceNowDevOpsChange:
  # jobs that must complete successfully before this job will run
    needs: build
  # type of machine to run the job on
    runs-on: ubuntu-latest
    name: 'ServiceNow DevOps Change'
    steps:
    
    - name: ServiceNow Change
      uses: ServiceNow/servicenow-devops-change@v3.0.0
      with:
        # Devops Integration Token
        devops-integration-token: ${{ secrets.SN_DEVOPS_TOKEN }}
        # ServiceNow Instance URL
        instance-url: ${{ secrets.SN_INSTANCE_URL }}
        # Orchestration Tool Id
        tool-id: ${{ secrets.SN_ORCHESTRATION_TOOL_ID }}
        # GitHub Context
        context-github: ${{ toJSON(github) }}
        # Display Name of the Job
        job-name: 'ServiceNow DevOps Change'
        change-request: '{"attributes":{"requested_by":{"name": "Test User"},"assignment_group":{"name": "Change Approval Team"},"priority": "2","comments": "This is a sample pipeline script to be added in your change step","work_notes": "Update this to work_notes","start_date": "2023-09-07 11:59:59","end_date": "2023-09-09 11:59:59"}}'
        # You can specify the requested_by attribute either with name or sys_id. Example: "requested_by":{"name": "Test User"} or "requested_by": "62826bf03710200044e0bfc8bcbe5df1"
        # You can specify the assignment_group attribute either with name or sys_id. Example: "assignment_group":{"name": "Change Approval Team"} or "assignment_group": "5f721d93c0a8010e015533746de18bf9"
        # start_date: This is the planned start date
        # end_date: This is the planned end date
